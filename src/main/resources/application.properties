server.port=8080
logging.level.org.springframework = INFO

spring.h2.console.enabled=true
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace


## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=50MB
# Max Request Size
spring.servlet.multipart.max-request-size=55MB


spring.jpa.show-sql=true
#not for production:
spring.jpa.hibernate.ddl-auto=create-drop

#naming strategy:
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

#Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

## POSTGRES SQL
spring.datasource.url=jdbc:postgresql://localhost:5432/photoapp
spring.datasource.username=postgres
spring.datasource.password=123
spring.jpa.generate-ddl=true
spring.datasource.driver-class-name=org.postgresql.Driver

# Keep connection alive  if idle for a long time (for production)
spring.datasource.tomcat.test-while-idle=true
spring.datasource.validationQuery = SELECT 1